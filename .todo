=== KEY ===
🟢 DONE
🔵 SOMEWHAT DONE
🟡 WORKING ON
🔴 NOT STARTED
⚫️ CHANGED

[CLI]
🟢 Read arguments properly.
🟢 Add `always-zero` flag that tells BuildDoc not to exit with any code other than 0.
🟢 Add `no-echo` flag that tells BuildDoc not to echo any command, even without the silence operator.


[PARSER]
🟢 Get task names read and raise an exception if any invalid character is read.
🟢 Read variable names and raise an exception for invalid characters.
🟢 Read variable values, and ensure that they are in between quotes, single or double.
⚫️ R̶e̶a̶d̶ ̶g̶l̶o̶b̶a̶l̶ ̶v̶a̶r̶i̶a̶b̶l̶e̶s̶.̶ (👇)
🟢 Load environmental variables from `.env` (if it exists) in CWD.
🟢 Replace variables in variable values.
🟢 Map variable names to values.
🟢 Read commands.
🟢 Replace variables in commands.
🟢 Map tasks to commands.
🟢 Read environment variables.
🟢 Replace environment variables with their values, or `''` if the variable doesn't exist.
🟢 Read shell variables.
🟢 Replace shell variable with result of shell command.
🟢 Read conditional statements.
🟢 Parse condition.
🟢 Append commands only if the condition they are scoped in is valid.
🟢 Run gathered conditional commands.
🔴 Read wildcards (ex. ~<*.c>).
🔴 Process wildcard.
🔴 Set value of variable using wildcard to array of result ([main.c, other.c, ...]).
🔴 Add array as a type. This is going to result in the code needing to be probably entirely rewritten...
🔵 Read for-loops.
🔴 Add loop variable as local variable and remove it when the for-loop concludes.
🔴 Execute code in for-loop for every iteration.


[MACROS]
🟢 Read macros and their arguments.
🔵 Execute macros, and raise an error if it fails or if the macro doesn't exist.


[RUNNER]
🟢 Make sure commands can be silenced with '&'.
🟢 Execute every command in given task.
🟢 Raise exception when a command fails.
